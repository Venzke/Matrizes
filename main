#include <stdio.h>
#include <stdlib.h>
#include <locale>
#include <string>
#include <conio.h>



int funcao(int n1); //PROTOTIPO


int main() {

    char matriz1[10][10];
    int linha, coluna, c;

    setlocale(LC_ALL, "portuguese");

    //DEFININDO A QTD DE LINHAS.
    printf("Insira a dimensão da linha: ");
    scanf_s("%i", &linha);
    while ((c = getchar()) != '\n' && c != EOF) {} //Limpa Buffer do teclado


    //LAÇO PARA FORÇAR O USUÁRIO A INSERIR UM NÚMERO DE 1 A 10.
    while (linha < 1 || linha > 10) {
        printf("--Dimensão inválida--\n");
        printf("Insira a dimensão da linha: ");
        scanf_s("%i", &linha);
        while ((c = getchar()) != '\n' && c != EOF) {} 
    }
    printf("\n");

    //DEFINIÇÃO DAS QTD DE COLUNAS
    printf("Insira a dimensão da coluna: ");
    scanf_s("%i", &coluna);
    while ((c = getchar()) != '\n' && c != EOF) {}

    //LAÇO PARA FORÇAR O USUÁRIO INSERIR UM NÚMERO DE 1 A 10.
    while (coluna < 1 || coluna > 10) {
        printf("--Dimensão inválida--\n");
        printf("Insira a dimensão da linha");
        scanf_s("%i", &coluna);
        while ((c = getchar()) != '\n' && c != EOF) {}
    }
    printf(":.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:");
    printf("\n\n");

    // VALIDAÇÃO DAS DIMENSÕES 
    printf("Dimensão definida! \n");
    printf("linhas: %i | colunas: %i", linha, coluna);

    printf("\n\n");
    printf(":.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:");
    printf("\n\n");
    //INSERIR OS DADOS NA MATRIZ
    for (int i = 0; i < linha; i++) {
        for (int j = 0; j < coluna; j++) {
            printf("Insira o elemento na dimensão (%i|%i): ", i, j);
            scanf_s("%c", &matriz1[i][j]);
            while ((c = getchar()) != '\n' && c != EOF) {}

        }
    }

    printf("\n"); printf(":.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:");
    printf("\n\n");

    //IMPRESSÃO DOS DADOS
    for (int i = 0; i < linha; i++) {
        for (int j = 0; j < coluna; j++) {
            printf("Elemento (%i|%i): %c", i, j, matriz1[i][j]);
            printf("\n\n");

        }
    }

    printf(":.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:");
    printf("\n\n");

    //COMPARAÇÃO DAS VARIAVEIS 

    int tabASCII[255], comp[10][10];

    for (int i = 0; i < 255; i++) {
        tabASCII[i] = 0;
    }
    for (int i = 0; i < linha; i++) {
        for (int j = 0; j < coluna; j++) {
            comp[i][j] = matriz1[i][j];
        }
    }
    for (int i = 0; i < linha; i++) {
        for (int j = 0; j < coluna; j++)
        {
            
            tabASCII[comp[i][j]]++;  //tabASCI receberá o resultado da combinação
        }
    }
    // IMPRIMINDO AS OCORRENCIAS
               
            printf("|Caracter|:.:|Ocorrência|\n");
    for (int i = 0; i <= 255; i++) {
        if (tabASCII[i] >= 1) {
            printf("|   %c    |:.:|     %i    |", i, tabASCII[i]);
            printf("\n");
        }
    }
    
    //PASSANDO O PRIMEIRA DADO DO INDICE PARA A FUNÇÃO

    int pC;
    int resultado;

    pC = matriz1[0][0];
    funcao(pC);

    resultado = funcao(pC);

    //IMPRIMINDO O RETORNO DO RESULTADO DA FUNÇÃO

    printf("Resultado da operação de %c é: %i", matriz1[0][0], funcao(pC));
    printf("\n");
    return 0;
} //FIM DA MAIN


int funcao(int n1) { //INICIO DA FUNÇÃO

    int resultado;
    if (n1 > 65 || n1 < 92) //NUMEROS REFERENTES A LETRAS MAIUSCULAS
    {
        resultado = n1/10;
        return resultado;
    }

    if (n1 > 33 || n1 < 64)
    {
        resultado = n1 * 2;
        return resultado;
    }

    if (n1 > 91 || n1 < 255) 
    {
        resultado = n1 * 2;
        return resultado;
    }  

}
